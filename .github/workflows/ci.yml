name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    types: [opened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - run: pip install -r src/python-fastui/requirements/all.txt
      - run: pip install src/python-fastui

      - run: npm install

      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files
        env:
          SKIP: no-commit-to-branch

  docs-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: install
        run: |
          pip install --upgrade pip
          pip install -r requirements/docs.txt
          pip install --extra-index-url https://pydantic:${PPPR_TOKEN}@pppr.pydantic.dev/simple/ mkdocs-material mkdocstrings-python griffe-typedoc mkdocstrings-typescript
          npm install
          npm install -g typedoc
        env:
          PPPR_TOKEN: ${{ secrets.PPPR_TOKEN }}

      - name: build site
        run: mkdocs build --strict

  test:
    name: test ${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Python 3.8 and 3.9 are not available on macOS 14
          - os: macos-13
            python-version: '3.10'
          - os: macos-13
            python-version: '3.11'
          - os: macos-13
            python-version: '3.12'
          - os: macos-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.9'

    runs-on: ${{ matrix.os }}

    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - run: pip install -r src/python-fastui/requirements/test.txt
      - run: pip install -r src/python-fastui/requirements/pyproject.txt
      - run: pip install -e src/python-fastui

      - run: coverage run -m pytest src
      # display coverage and fail if it's below 80%, which shouldn't happen
      - run: coverage report --fail-under=80

      # test demo on 3.11 and 3.12, these tests are intentionally omitted from coverage
      - if: matrix.python-version == '3.11' || matrix.python-version == '3.12'
        run: pytest demo/tests.py

      - run: coverage xml

      - uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          env_vars: PYTHON,OS

  npm-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - run: npm install
      - run: npm run build
      - run: tree src

  check: # This job does nothing and is only used for the branch protection
    if: always()
    needs: [lint, test, npm-build]
    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        id: all-green
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    needs: [check]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: pip install -U build

      - id: check-version
        uses: samuelcolvin/check-python-version@v4.1
        with:
          version_file_path: 'src/python-fastui/fastui/__init__.py'

      - run: python -m build --outdir dist src/python-fastui

      - run: ls -lh dist

      - uses: pypa/gh-action-pypi-publish@release/v1
